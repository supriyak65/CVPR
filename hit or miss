import numpy as np
import matplotlib.pyplot as plt
image = np.array([
[0, 0, 0, 0, 0, 0, 0],
[0, 1, 1, 1, 0, 0, 0],
[0, 1, 0, 1, 0, 0, 0],
[0, 1, 1, 1, 0, 0, 0],
[0, 0, 0, 0, 0, 0, 0]
])
SE_hit = np.array([[1, 1, 1], [1, 0, 1], [1, 1, 1]]) 
SE_miss = np.array([[0, 0, 0], [0, 1, 0], [0, 0, 0]])
def erode(img, SE): 
    rows, cols = img.shape
    se_rows, se_cols = SE.shape
    output = np.zeros((rows - se_rows + 1, cols - se_cols + 1), dtype=np.uint8) 
    for i in range(output.shape[0]):
        for j in range(output.shape[1]):
            region = img[i:i + se_rows, j:j + se_cols]
            if np.array_equal(region * SE, SE): 
                output[i, j] = 1
    return output
hit = erode(image, SE_hit)	# Foreground erosion 
miss = erode(1 - image, SE_miss) # Background erosion # Hit-or-Miss Transformation
hit_miss = hit & miss # Display Results
titles = ["Original", "Eroded (Hit)", "Eroded (Miss)", "Hit-or-Miss Result"] 
images = [image, hit, miss, hit_miss]
plt.figure(figsize=(10, 5))
for i in range(4):
    plt.subplot(1, 4, i + 1)
    plt.imshow(images[i], cmap='gray', vmin=0, vmax=1) 
    plt.title(titles[i])
    plt.axis('off')    
    plt.tight_layout() 
    plt.show() 
